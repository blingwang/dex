package migrations

// THIS FILE WAS GENERATED BY gen.go DO NOT EDIT

import "github.com/rubenv/sql-migrate"

var PostgresMigrations migrate.MigrationSource = &migrate.MemoryMigrationSource{
	Migrations: []*migrate.Migration{
		{
			Id: "0001_initial_migration.sql",
			Up: []string{
				"-- +migrate Up\nCREATE TABLE IF NOT EXISTS \"authd_user\" (\n    \"id\" text not null primary key,\n    \"email\" text UNIQUE,\n    \"email_verified\" boolean,\n    \"first_name\" text,\n    \"last_name\" text,\n    \"display_name\" text,\n    \"organization_id\" text,\n    \"admin\" boolean,\n    \"created_at\" bigint,\n    \"disabled\" boolean\n);\n\nCREATE TABLE IF NOT EXISTS \"client_identity\" (\n    \"id\" text not null primary key,\n    \"secret\" bytea,\n    \"metadata\" text,\n    \"dex_admin\" boolean,\n    \"public\" boolean\n);\n\nCREATE TABLE IF NOT EXISTS \"connector_config\" (\n    \"id\" text not null primary key,\n    \"type\" text,\n    \"config\" text\n);\n\nCREATE TABLE IF NOT EXISTS \"key\" (\n    \"value\" bytea not null\n);\n\nCREATE TABLE IF NOT EXISTS \"password_info\" (\n    \"user_id\" text not null primary key,\n    \"password\" text,\n    \"password_expires\" bigint\n);\n\nCREATE TABLE IF NOT EXISTS \"session\" (\n    \"id\" text not null primary key,\n    \"state\" text,\n    \"created_at\" bigint,\n    \"expires_at\" bigint,\n    \"client_id\" text,\n    \"client_state\" text,\n    \"redirect_url\" text, \n    \"identity\" text,\n    \"connector_id\" text,\n    \"user_id\" text, \n    \"register\" boolean,\n    \"nonce\" text,\n    \"scope\" text,\n    \"groups\" text\n);\n\nCREATE TABLE IF NOT EXISTS \"session_key\" (\n    \"key\" text not null primary key,\n    \"session_id\" text,\n    \"expires_at\" bigint,\n    \"stale\" boolean\n);\n\nCREATE TABLE IF NOT EXISTS \"remote_identity_mapping\" (\n    \"connector_id\" text not null,\n    \"user_id\" text,\n    \"remote_id\" text not null,\n    primary key (\"connector_id\", \"remote_id\")\n);\n\nCREATE TABLE IF NOT EXISTS \"refresh_token\" (\n    \"id\" bigint NOT NULL,\n    \"payload_hash\" bytea,\n    \"user_id\" text,\n    \"client_id\" text,\n    \"scopes\" text,\n    \"connector_id\" text\n);\n\nCREATE SEQUENCE refresh_token_id_seq\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\nALTER SEQUENCE refresh_token_id_seq OWNED BY refresh_token.id;\n\nALTER TABLE ONLY refresh_token ALTER COLUMN id SET DEFAULT nextval('refresh_token_id_seq'::regclass);\n\nALTER TABLE ONLY refresh_token ADD CONSTRAINT refresh_token_pkey PRIMARY KEY (id);\n\nCREATE TABLE IF NOT EXISTS \"trusted_peers\" (\n    \"client_id\" text not null,\n    \"trusted_client_id\" text not null,\n    primary key (\"client_id\", \"trusted_client_id\")\n);\n\nCREATE TABLE IF NOT EXISTS \"organization\" (\n    \"organization_id\" text not null primary key,\n    \"name\" text UNIQUE,\n    \"owner_id\" text,\n    \"created_at\" bigint,\n    \"disabled\" boolean\n);\n\nCREATE INDEX authd_user_organization_index ON authd_user (organization_id);\n",
			},
		},
	},
}
